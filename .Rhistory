mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all = TRUE)
plot(mrgtotal)
hist(mrgtotal)
activity$mnthday <- as.Date(date, %b %d)
activity$mnthday <- as.Date(date, %b%d)
activity$mnthday <- as.Date(activity$date, %b %d)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("plyr", "dplyr", "data.table", "dtplyr", "lubridate", "ggplot2", "knitr")
ipak(packages)
activity$mnthday <- as.Date(activity$date, %b%d)
activity$mnthday <- as.Date(ymd(activity$date), %b%d)
activity$mnthday <- as.Date(ymd(activity$date), format = %b %d)
activity$date <- as.Date(ymd(activity$date))
View(activity)
View(activity)
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- format(activity$date, format = "%Y-%m-%d")
str(activity)
activity$mnthday <- as.Date(activity$date, format = "%b-%d")
View(activity)
activity <- read.csv("activity.csv", header = TRUE)
str(activity)
activity$date <- format(activity$date, format = "%Y-%m-%d")
class(activity$date)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
class(activity$date)
activity$mnthday <- format(activity$date, format = "%b-%d")
View(activity)
View(activity)
activity <- select(activity, mnthday, date, interval, steps)
View(activity)
activity$mnthday <- format(activity$date, format = "%d-%b-%y")
activity <- select(activity, mnthday, date, interval, steps)
View(activity)
activity$daymnthyr <- format(activity$date, format = "%d-%b-%y")
activity <- select(activity, daymnthyr, date, interval, steps)
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity$daymnthyr <- format(activity$date, format = "%d-%b-%y")
activity <- select(activity, daymnthyr, date, interval, steps)
View(activity)
dates <- data.frame(date=unique(activity$daymnthyr))
stepaday <- aggregate(steps ~ daymnthyr, data = activity, FUN = function(x) sum=sum(x))
mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all.dates = TRUE)
View(mrgtotal)
mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all = TRUE)
View(mrgtotal)
mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all = TRUE)
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity$date.ymd <- format(activity$date, format = "%d-%b-%y")
activity <- select(activity, date.ymd, date, interval, steps)
activity <- read.csv("activity.csv", header = TRUE)
activity <- select(activity, date, interval, steps)
dates <- data.frame(date=unique(activity$date))
stepaday <- aggregate(steps ~ date, data = activity, FUN = function(x) sum=sum(x))
mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all = TRUE)
avgstep <- aggregate(steps ~ date, data = activity, FUN = function(x) mean=mean(x))
medianstep <- aggregate(steps ~ date, data = activity, FUN = function(x) median=median(x))
View(medianstep)
avgstep <- setNames(aggregate(steps ~ date, data = activity,
FUN = function(x) mean=mean(x)), c("date", "average.steps"))
medianstep <- setNames(aggregate(steps ~ date, data = activity,
FUN = function(x) median=median(x)), c("date", "median.steps"))
View(avgstep)
View(medianstep)
rm(avgstep)
rm(medianstep)
hist(mrgtotal)
str(activity)
activity <- read.csv("activity.csv", header = TRUE)
activity <- as.Date(activity$date, format = "%Y-%m-%d")
activity <- select(activity, date, interval, steps)
dates <- data.frame(date=unique(activity$date))
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity <- select(activity, date, interval, steps)
dates <- data.frame(date=unique(activity$date))
stepaday <- aggregate(steps ~ date, data = activity, FUN = function(x) sum=sum(x))
mrgtotal <- merge(dates[,1], stepaday[,1:2], by = 1, all = TRUE)
str(activity)
hist(activity)
?hist
hist(activity$steps, main = "Histogram of Total Step by Date",)
min(dates)
dates
min(dates)
min.date <- dates[1,]
min.date
date.range <- range(dates$date)
date.range
date.range[1]
date.range[2]
class(date.range)
min(date.range)
count(dates$date)
length(dates$date)
hist(mrgtotal$steps, breaks = 10, xlim =c(min(dates$date), max(dates$date))
)
qplot(mrgtotal$date, mrgtotal$steps, geom = "histogram")
qplot(date, steps, data = mrgtotal, geom = "histogram")
qplot(mrgtotal$steps, geom = "histogram")
?qplot
qplot(date, steps, data = mrgtotal, xlim = c(mrgtotal[1]), geom = "histogram",
main = "Total Steps Each Day", xlab = "Dates", ylab = "# Steps")
qplot(date, steps, data = mrgtotal, xlim = dates$date, geom = "histogram",
main = "Total Steps Each Day", xlab = "Dates", ylab = "# Steps")
qplot(date, steps, data = mrgtotal, xlim = range(dates$date), geom = "histogram",
main = "Total Steps Each Day", xlab = "Dates", ylab = "# Steps")
qplot(date, steps, data = mrgtotal, xlim = range(dates$date), geom = "histogram",
main = "Total Steps Each Day", xlab = "Dates", ylab = "# Steps")
qplot(steps, data = mrgtotal, xlim = range(dates$date), geom = "histogram",
main = "Total Steps Each Day", xlab = "Dates", ylab = "# Steps")
meansteps <- mean(mrgtotal$steps, is.na = FALSE)
meansteps <- mean(mrgtotal$steps, is.na = TRUE)
meansteps <- mean(mrgtotal$steps, na.rm = TRUE)
mediansteps <- median(mrgtotal$steps, na.rm = TRUE)
steps.a.day1 <- data.frame("Mean Steps" = meansteps, "Median Steps" = mediansteps)
View(steps.a.day1)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y%m%d")
activity$date2 <- as.Date(activity$date, format = "%Y%b%d")
activity <- select(activity, date1, date2, interval, steps)
dates <- data.frame(date=unique(activity$date1))
View(activity)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
View(activity)
str(activity)
activity$date2 <- format(activity$date1, format = "%Y%b%d")
View(activity)
activity$date1 <- format(activity$date1, format = "%Y%m%d")
View(activity)
activity <- select(activity, date, date1, date2, interval, steps)
dates <- data.frame(date=unique(activity$date1))
date.range <- range(dates)
min.date <- min(dates)
max.date <- max(dates)
daterange <- range(dates)
range(dates)
daterange <- c(dates[1]:dates[length(dates)])
daterange <- c(dates)
min.date <- min(dates)
max.date <- max(dates)
mindate <- min(dates)
View(dates)
min.date <- dates[1]
max.date <- dates[length(dates)]
View(min.date)
View(min.date)
min.date <- dates[1,]
max.date <- dates[length(dates),]
min.date
max.date
min.date <- dates$date[1]
min.date
View(dates)
plot(activity$date, activity$steps)
plot(activity$date, activity$steps, type = "n")
plot(activity$date2, activity$steps, type = "n")
mean.steps.each5 <- aggregate(steps ~ date1 + interval, data = activity,
FUN = function(x) meansteps=mean(x))
View(mean.steps.each5)
mean.steps.each5[order(mean.steps.each5[,1], mean.steps.each5[,2]),]
mean.steps.each5 <- order(mean.steps.each5[,1], mean.steps.each5[,2])
mean.steps.each5 <- aggregate(steps ~ date1 + interval, data = activity,
FUN = function(x) meansteps=mean(x))
mean.steps.each5 <- mean.steps.each5[order(mean.steps.each5[,1], mean.steps.each5[,2]),]
View(mean.steps.each5)
rm(mean.steps.each5)
steps.per.5mim <- aggregate(steps ~ date1 + interval, data = activity,
FUN = function(x) meansteps=mean(x))
steps.per.5min <- steps.per.5min[order(steps.per.5min[,1], steps.per.5min[,2]),]
mean.5min <- mean(steps.per.5min$steps)
View(steps.per.5mim)
steps.per.5mim <- aggregate(steps ~ date1 + interval, data = activity,
FUN = function(x) meansteps=mean(x))
View(steps.per.5mim)
steps.per.5min <- steps.per.5min[order(steps.per.5min[,1], steps.per.5min[,2]),]
rm(steps.per.5mim)
steps.per.5min <- aggregate(steps ~ date1 + interval, data = activity,
FUN = function(x) meansteps=mean(x))
steps.per.5min <- steps.per.5min[order(steps.per.5min[,1], steps.per.5min[,2]),]
mean.5min <- mean(steps.per.5min$steps)
hist(steps.a.day1)
steps.a.day <- as.factor(steps.a.day$date1)
steps.a.day <- aggregate(steps ~ date1, data = activity, FUN = function(x) sum=sum(x))
steps.a.day <- as.factor(steps.a.day$date1)
steps.a.day
steps.a.day <- aggregate(steps ~ date1, data = activity, FUN = function(x) sum=sum(x))
steps.a.day$date1 <- as.factor(steps.a.day$date1)
hist(steps.a.day)
steps.a.day$date1 <- as.numeric(as.character(steps.a.day$date1))
hist(steps.a.day)
steps.a.day <- aggregate(steps ~ date1, data = activity, FUN = function(x) sum=sum(x))
hist(steps.a.day$steps)
hist(steps.a.day$date1)
steps.each.5min <- aggregate(steps ~ interval, data = activity,
FUN = function(x) meansteps=mean(x))
View(steps.each.5min)
plot(steps.a.day)
with(steps.a.day, plot(date1, steps, main = "Total Steps Each Day", type = "n"))
hist(steps.a.day$steps)
max.steps5 <- max(steps.each.5min)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$date1 <- format(activity$date1, format = "%Y%m%d")
activity$date2 <- format(activity$date1, format = "%Y%b%d")
activity <- select(activity, date, date1, date2, day, interval, steps)
View(activity)
weekday <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend <- c("Saturday", "Sunday")
activity.wday <- subset(activity, day %in% weekday)
activity.wend <- subset(activity, day %in% weekend)
mean.steps.wday <- aggregate(steps ~ date1, data = activity.wday,
FUN = function(x) mean=mean(x))
mean.steps.wend <- aggregate(steps ~ date1, data = activity.wend,
FUN = function(x) mean=mean(x))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(mean.steps.wday, plot(date1, steps, pch = 20, type = "l", lty = 1, lwd = 1,
main = “Average Steps (Weekdays)”)
with(mean.steps.wend, plot(date1, steps, pch = 20, type = "l", lty = 1, lwd = 1,
main = “Average Steps (Weekdends)”)
with(mean.steps.wday, plot(date1, steps, pch = 20,
main = “Average Steps (Weekdays)”)
mean.steps.wday <- aggregate(steps ~ interval, data = activity.wday,
FUN = function(x) mean=mean(x))
mean.steps.wend <- aggregate(steps ~ interval, data = activity.wend,
FUN = function(x) mean=mean(x))
View(mean.steps.wday)
plot(mean.steps.wday$interval, mean.steps.wday$steps)
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20)
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l")
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlab = "Interval", ylab = "Average Number of Steps",
main = "Average Number of Steps (Weekdays)")
mean.steps.interval <- aggregate(steps ~ interval, data = activity,
FUN = function(x) mean=mean(x))
yrange <- range(mean.steps.interval$steps)
yrange
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlab = "Interval", ylab = "Average Number of Steps",
main = "Average Number of Steps (Weekdays)")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlab = "Interval", ylab = "Average Number of Steps",
main = "Average Number of Steps (Weekends)")
mean.steps.interval <- aggregate(steps ~ interval, data = activity,
FUN = function(x) mean=mean(x))
mean.steps.wday <- aggregate(steps ~ interval, data = activity.wday,
FUN = function(x) mean=mean(x))
mean.steps.wend <- aggregate(steps ~ interval, data = activity.wend,
FUN = function(x) mean=mean(x))
min.yrange <- round(min(mean.steps.interval$steps),0)
max.yrange <- round(max(mean.steps.interval$steps),0)
yrange <- range(seq(from = min.yrange, to = max.yrange, by = 25))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
ylim = yrange, xlab = "", ylab = "Average Number of Steps",
main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
ylim = yrange, xlab = "", ylab = "Average Number of Steps",
main = "Weekend")
View(mean.steps.wday)
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlim = c(0:3000), ylim = yrange, xlab = "",
ylab = "Average Number of Steps", main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlim = c(0:3000), ylim = yrange, xlab = "",
ylab = "" main = "Weekend")
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "Average Number of Steps", main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "" main = "Weekend")
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "Average Number of Steps", main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "", main = "Weekend")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "Average Number of Steps", main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlim = range(0,3000), ylim = yrange, xlab = "",
ylab = "", main = "Weekend")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(mean.steps.wday$interval, mean.steps.wday$steps, pch = 20, type = "l",
xlim = range(0,2500), ylim = yrange, xlab = "",
ylab = "Average Number of Steps", main = "Weekday")
plot(mean.steps.wend$interval, mean.steps.wend$steps, pch = 20, type = "l",
xlim = range(0,2500), ylim = yrange, xlab = "",
ylab = "", main = "Weekend")
mean.weekday <- aggregate(steps ~ day, data = activity, FUN = function(x) mean=mean(x))
with(mean.weekday, plot(day, steps, pch = 20, type = "l", lty =1, lwd = 1,
xlab = "Day of Week", ylab = "Average Number of Steps",
main = "Average Steps per Day of Week"))
View(mean.weekday)
View(mean.weekday)
plot(mean.weekday$day, mean.weekday$steps)
with(mean.weekday, plot(day, steps, pch = 20, type = "l", lty =1, lwd = 1,
xlim = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday")
xlab = "Day of Week", ylab = "Average Number of Steps",
main = "Average Steps per Day of Week"))
with(mean.weekday, plot(day, steps, pch = 20, type = "l", lty =1, lwd = 1,
xlim = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday"),
xlab = "Day of Week", ylab = "Average Number of Steps",
main = "Average Steps per Day of Week"))
with(mena.weekday, plot(day, steps, pch = 20, type = "l"))
with(mean.weekday, plot(day, steps, pch = 20, type = "l"))
with(mean.weekday, plot(day, steps, pch = 20, type = "l"),)
with(mean.weekday, plot(day, steps, pch = 20, type = "l"), xlim = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday"))
with(mean.weekday, plot(day, steps, pch = 20, type = "l"), xlim = c("Monday", "Sunday"))
range(mean.weekday)
range(mean.weekday$day)
steps.each.5min <- aggregate(steps ~ interval, data = activity,
FUN = function(x) meansteps=mean(x))
steps.each 5min <- steps.each.5min[order(steps.each.5min$steps, decreasing = TRUE),]
steps.each.5min <- steps.each.5min[order(steps.each.5min$steps, decreasing = TRUE),]
View(steps.each.5min)
steps.each.5min[1,]
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day = c("Saturday", "Sunday"), "Weekend", "Weekday")
View(activity)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
View(activity)
activity$date1 <- format(activity$date1, format = "%Y%m%d")
activity$date2 <- format(activity$date1, format = "%Y%b%d")
activity <- select(activity, daytype, day, date, date1, date2, interval, steps)
activity <- read.csv("activity.csv", header = TRUE)
activity2 <- subset(activity, is.na(steps))
View(activity2)
opts_chunk$set(echo = FALSE, results = asis, include = TRUE)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
### Package Usage
packages <- c("plyr", "dplyr", "data.table", "dtplyr", "lubridate", "ggplot2", "knitr")
ipak(packages)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity$date1 <- format(activity$date1, format = "%Y%m%d")
activity$date2 <- format(activity$date1, format = "%Y%b%d")
activity$day_int <- paste(activity$day, activity$interval, sep = "_")
activity <- select(activity, daytype, day, date, date1, date2, interval,
day_int, steps)
steps.a.day1 <- aggregate(steps ~ date1, data = activity, FUN = function(x) sum=sum(x))
hist(steps_a_day1$date1)
hist(steps_a_day1$steps)
View(steps.a.day1)
hist(steps.a.day1$steps)
hist(steps.a.day1$date1)
steps.a.day1 <- aggregate(steps ~ date, data = activity, FUN = function(x) sum=sum(x))
hist(steps.a.day1$steps)
qplot(steps.a.day$steps, geom = "histogram", binwidth = 0.1, xlab = "Date")
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
### Package Usage
packages <- c("plyr", "dplyr", "data.table", "dtplyr", "lubridate", "ggplot2", "knitr")
ipak(packages)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity$date1 <- format(activity$date1, format = "%Y%m%d")
activity$date2 <- format(activity$date1, format = "%Y%b%d")
activity$day_int <- paste(activity$day, activity$interval, sep = "_")
activity <- select(activity, daytype, day, date, date1, date2, interval,
day_int, steps)
steps.a.day1 <- aggregate(steps ~ date, data = activity, FUN = function(x) sum=sum(x))
min.xrange <- min(steps.a.day1$date)
max.xrange <- max(steps.a.day1$date)
xrange <- range(seq(from = min.range, to = max.range, by = 1))
min.xrange <- min(steps.a.day1$date1)
str(activity)
activity <- read.csv("activity.csv", header = TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity$date1 <- format(activity$date1, format = "%Y%m%d")
activity$date2 <- format(activity$date1, format = "%Y%b%d")
activity$day_int <- paste(activity$day, activity$interval, sep = "_")
activity <- select(activity, daytype, day, date, date1, date2, interval,
day_int, steps)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity$date2 <- format(activity$date1, format = "%Y%m%d")
activity$date3 <- format(activity$date1, format = "%Y%b%d")
activity$day_int <- paste(activity$day, activity$interval, sep = "_")
activity <- select(activity, daytype, day, date, date1, date2, date3, interval,
day_int, steps)
View(activity)
steps.a.day1 <- aggregate(steps ~ date1, data = activity, FUN = function(x) sum=sum(x))
View(steps.a.day1)
min.xrange <- min(steps.a.day1$date1)
max.xrange <- max(steps.a.day1$date1)
qplot(steps.a.day1, geom = "histogram", binwidth = 0.1, xlab = "Date",
xlim = c(min.xrange, max.xrange))
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date",
xlim = c(min.xrange, max.xrange))
str(steps.a.day1)
class(steps.a.day1$date1)
max.xrange
xrange <- range(seq(from = min.range, to = max.range, by = 5))
xrange <- range(seq(from = min.xrange, to = max.xrange, by = 5))
xrange
xrange <- c(seq(from = min.xrange, to = max.xrange, by = 5))
xrange
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date",
xlim = xrange)
dates <- unique(activity$date1)
dates <- dates[order(dates$date1[,1]),]
dates
mindates <- dates[1,]
maxdates <- dates[lenght(dates),]
mindates <- dates$date1[1,]
mindates <- dates$date1[1,1]
mindates <- max(dates$date1)
dates <- as.data.frame(unique(activity$date1))
mindate <- dates[order(datess[1,]),]
mindate <- dates[order(dates[1,]),]
mindate
maxdate <- dates[order(dates[length(dates$date1),]),]
maxdate
View(dates)
dates <- as.data.frame(date = unique(activity$date1))
maxdate <- dates[order(dates[length(dates),]),]
maxdate
mindate
View(dates)
View(dates)
View(activity)
View(dates)
dates <- rename(dates, c('unique(activity$dates1)' = 'date'))
colnames(activity)[1] <- "date"
View(dates)
activity <- read.csv("activity.csv", header = TRUE)
activity$date1 <- as.Date(activity$date, format = "%Y-%m-%d")
activity$day <- weekdays(activity$date1)
activity$daytype <- ifelse(activity$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
activity$date2 <- format(activity$date1, format = "%Y%m%d")
activity$date3 <- format(activity$date1, format = "%Y%b%d")
activity$day_int <- paste(activity$day, activity$interval, sep = "_")
activity <- select(activity, daytype, day, date, date1, date2, date3, interval,
day_int, steps)
dates <- as.data.frame(unique(activity$date1))
colnames(dates)[1] <- "date"
View(dates)
mindate <- dates[order(dates[1,]),]
maxdate <- dates[order(dates[length(dates),]),]
len <- length(dates)
max(dates$date)
mindate <- min(dates$date)
maxdate <- max(dates$date)
mindate
maxdate
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date",
xlim = c(mindate,maxdate))
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date",
xlim = as.Date(c(mindate,maxdate)))
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date")
hist(steps.a.day1)
hist(steps.a.day1$steps)
steps.a.day1 <- aggregate(steps ~ date, data = activity, FUN = function(x) sum=sum(x))
qplot(steps.a.day1$steps, geom = "histogram", binwidth = 0.1, xlab = "Date")
View(steps.a.day1)
ggplot(steps.a.day1, aes(steps))+geom_histogram(binwidth=0.1, fill = "black")
ggplot(steps.a.day1, aes(date))+geom_histogram(binwidth=0.1, fill = "black")
plot(steps.a.day1$date, steps.a.day1$steps, pch = 20, type = "l")
par(c(5,4,4,1))
par(mar = c(4,4,2,1))
plot(steps.a.day1$date, steps.a.day1$steps, pch = 20, type = "l")
par(mar = c(8,4,2,1))
plot(steps.a.day1$date, steps.a.day1$steps, pch = 20, type = "l")
par(mar = c(8,8,2,1))
plot(steps.a.day1$date, steps.a.day1$steps, pch = 20, type = "l")
par(mar = c(8,8,2,1))
hist(steps.a.day1$steps)
hist(steps.a.day1$steps, pch = 20, main = "Total Steps Each Day",)
hist(steps.a.day1$steps, pch = 20, main = "Total Steps Each Day", xlim = as.Date(c("2012-10-01","2012-11-30")))
hist(steps.a.day1$steps, pch = 20, main = "Total Steps Each Day", xlim = c("2012-10-01","2012-11-30"))
with(steps.a.day1, plot(date1, steps, main = "Total Steps Each Day", type = "n"))
with(steps.a.day1, plot(date, steps, main = "Total Steps Each Day", type = "n"))
plot(steps.a.day1$date, steps.a.day1$steps, main = "Total Steps Each Day", type = "n"))
plot(steps.a.day1$date, steps.a.day1$steps, main = "Total Steps Each Day", type = "n")
